#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Redis –æ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á Celery
"""
import redis
import sys

def clear_redis():
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Redis
        r = redis.Redis(host='localhost', port=6379, db=0)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        r.ping()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª—é—á–µ–π
        keys = r.keys('*')
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–π –≤ Redis: {len(keys)}")
        
        if keys:
            print("üóëÔ∏è –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏...")
            r.flushall()
            print("‚úÖ Redis –æ—á–∏—â–µ–Ω")
        else:
            print("‚ÑπÔ∏è Redis —É–∂–µ –ø—É—Å—Ç")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Celery –æ—á–µ—Ä–µ–¥–∏
        print("\nüßπ –û—á–∏—â–∞–µ–º Celery –æ—á–µ—Ä–µ–¥–∏...")
        import subprocess
        result = subprocess.run(['celery', '-A', 'celery_app', 'purge', '-f'], 
                              capture_output=True, text=True)
        print(result.stdout)
        if result.stderr:
            print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:", result.stderr)
            
    except redis.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Redis –∑–∞–ø—É—â–µ–Ω:")
        print("   sudo systemctl start redis-server")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    clear_redis() 