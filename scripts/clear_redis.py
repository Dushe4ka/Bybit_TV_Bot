#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Redis –æ—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á Celery
–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Redis —á–µ—Ä–µ–∑ Docker –Ω–∞ –ø–æ—Ä—Ç—É 14572
"""
import redis
import sys
from celery_app import celery_app

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis (–∏–∑ celery_config.py)
REDIS_HOST = '127.0.0.1'
REDIS_PORT = 14572
REDIS_PASSWORD = 'Ollama12357985'
REDIS_DB = 10

def clear_redis():
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Redis —Å –ø–∞—Ä–æ–ª–µ–º
        print(f"üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Redis ({REDIS_HOST}:{REDIS_PORT}, db={REDIS_DB})...")
        r = redis.Redis(
            host=REDIS_HOST, 
            port=REDIS_PORT, 
            db=REDIS_DB,
            password=REDIS_PASSWORD,
            decode_responses=True
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        r.ping()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª—é—á–µ–π
        keys = r.keys('*')
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–π –≤ Redis (db={REDIS_DB}): {len(keys)}")
        
        if keys:
            print("\nüîç –¢–∏–ø—ã –∫–ª—é—á–µ–π:")
            celery_keys = [k for k in keys if 'celery' in k.lower()]
            other_keys = [k for k in keys if 'celery' not in k.lower()]
            print(f"   - Celery –∫–ª—é—á–∏: {len(celery_keys)}")
            print(f"   - –î—Ä—É–≥–∏–µ –∫–ª—é—á–∏: {len(other_keys)}")
            
            # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–µ 10 –∫–ª—é—á–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            if len(keys) <= 10:
                print(f"\nüìù –ö–ª—é—á–∏: {keys}")
            else:
                print(f"\nüìù –ü–µ—Ä–≤—ã–µ 10 –∫–ª—é—á–µ–π: {keys[:10]}")
            
            print("\nüóëÔ∏è –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
            r.flushdb()  # –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â—É—é –ë–î (db=10), –Ω–µ –≤—Å–µ –±–∞–∑—ã
            print("‚úÖ Redis –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è Redis –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –ø—É—Å—Ç–∞")
            
        # –û—á–∏—â–∞–µ–º Celery –æ—á–µ—Ä–µ–¥–∏ —á–µ—Ä–µ–∑ API
        print("\nüßπ –û—á–∏—â–∞–µ–º Celery –æ—á–µ—Ä–µ–¥–∏ —á–µ—Ä–µ–∑ control API...")
        try:
            celery_app.control.purge()
            print("‚úÖ Celery –æ—á–µ—Ä–µ–¥–∏ –æ—á–∏—â–µ–Ω—ã")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —á–µ—Ä–µ–∑ control API: {e}")
            print("   –ü—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É...")
            import subprocess
            result = subprocess.run(
                ['celery', '-A', 'celery_app', 'purge', '-f'], 
                capture_output=True, 
                text=True,
                timeout=10
            )
            if result.returncode == 0:
                print("‚úÖ Celery –æ—á–µ—Ä–µ–¥–∏ –æ—á–∏—â–µ–Ω—ã —á–µ—Ä–µ–∑ CLI")
                if result.stdout:
                    print(result.stdout)
            else:
                print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: {result.stderr}")
                
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
        print("\nüõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏...")
        try:
            celery_app.control.discard_all()
            print("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–¥–∞—á: {e}")
            
        print("\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Celery worker'—ã:")
        print("   celery -A celery_app worker --loglevel=info")
            
    except redis.ConnectionError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis: {e}")
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print(f"   1. –ó–∞–ø—É—â–µ–Ω –ª–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å Redis")
        print(f"   2. –î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –ø–æ—Ä—Ç {REDIS_PORT}")
        print(f"   3. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –ø–∞—Ä–æ–ª—å: {REDIS_PASSWORD[:3]}***")
        print(f"\nüìù –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker:")
        print(f"   docker ps | grep redis")
        print(f"   docker logs <container_id>")
    except redis.AuthenticationError:
        print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Redis. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –≤ celery_config.py")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    clear_redis() 