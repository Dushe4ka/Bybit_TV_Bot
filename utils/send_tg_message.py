import aiohttp
from logger_config import setup_logger
from typing import Optional

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logger = setup_logger("csv_reader_source")

async def send_message_to_telegram(message, chat_ids, TELEGRAM_BOT_TOKEN):
    """–ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram"""
    async with aiohttp.ClientSession() as session:
        for chat_id in chat_ids:
            url = f'https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage'
            payload = {'chat_id': chat_id, 'text': message, 'parse_mode': 'HTML'}
            try:
                async with session.post(url, json=payload) as response:
                    response.raise_for_status()
                    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id}: {e}")


async def notify_position_opened(
    chat_ids: list,
    bot_token: str,
    symbol: str,
    entry_price: float,
    quantity: float,
    usdt_amount: float,
    tp_price: float,
    tp_percent: float,
    strategy_type: str = "SHORT"
):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–∑–∏—Ü–∏–∏
    
    Args:
        chat_ids: –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        symbol: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        entry_price: –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞
        quantity: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞
        usdt_amount: –°—É–º–º–∞ –≤ USDT
        tp_price: –¶–µ–Ω–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞
        tp_percent: –ü—Ä–æ—Ü–µ–Ω—Ç —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞
        strategy_type: –¢–∏–ø —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ (SHORT/LONG)
    """
    message = (
        f"üöÄ <b>–ü–û–ó–ò–¶–ò–Ø –û–¢–ö–†–´–¢–ê</b> üöÄ\n\n"
        f"üìä –°–∏–º–≤–æ–ª: <code>{symbol}</code>\n"
        f"üìâ –¢–∏–ø: <b>{strategy_type}</b>\n"
        f"üí∞ –°—É–º–º–∞: <b>{usdt_amount:.2f} USDT</b>\n"
        f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <b>{quantity:.4f}</b>\n"
        f"üíµ –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: <b>{entry_price:.6f}</b>\n"
        f"üéØ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: <b>{tp_price:.6f}</b> ({tp_percent:.1f}%)\n"
    )
    await send_message_to_telegram(message, chat_ids, bot_token)


async def notify_averaging_order_placed(
    chat_ids: list,
    bot_token: str,
    symbol: str,
    averaging_price: float,
    averaging_percent: float,
    quantity: float
):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–Ω–æ–≥–æ –æ—Ä–¥–µ—Ä–∞ –Ω–∞ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ
    
    Args:
        chat_ids: –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        symbol: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        averaging_price: –¶–µ–Ω–∞ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è
        averaging_percent: –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è
        quantity: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
    """
    message = (
        f"üìù <b>–û–†–î–ï–† –ù–ê –£–°–†–ï–î–ù–ï–ù–ò–ï</b>\n\n"
        f"üìä –°–∏–º–≤–æ–ª: <code>{symbol}</code>\n"
        f"üí∞ –¶–µ–Ω–∞ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è: <b>{averaging_price:.6f}</b> (+{averaging_percent:.1f}%)\n"
        f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <b>{quantity:.4f}</b>\n"
        f"‚è≥ –°—Ç–∞—Ç—É—Å: <b>–û–∂–∏–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è</b>\n"
    )
    await send_message_to_telegram(message, chat_ids, bot_token)


async def notify_averaging_executed(
    chat_ids: list,
    bot_token: str,
    symbol: str,
    averaged_price: float,
    total_quantity: float,
    new_tp_price: float,
    tp_percent: float,
    stop_loss_price: float,
    sl_percent: float
):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è
    
    Args:
        chat_ids: –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        symbol: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        averaged_price: –£—Å—Ä–µ–¥–Ω–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞
        total_quantity: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        new_tp_price: –ù–æ–≤–∞—è —Ü–µ–Ω–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞
        tp_percent: –ü—Ä–æ—Ü–µ–Ω—Ç —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞
        stop_loss_price: –¶–µ–Ω–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
        sl_percent: –ü—Ä–æ—Ü–µ–Ω—Ç —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
    """
    message = (
        f"üéØ <b>–£–°–†–ï–î–ù–ï–ù–ò–ï –í–´–ü–û–õ–ù–ï–ù–û</b> üéØ\n\n"
        f"üìä –°–∏–º–≤–æ–ª: <code>{symbol}</code>\n"
        f"üíµ –£—Å—Ä–µ–¥–Ω–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞: <b>{averaged_price:.6f}</b>\n"
        f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: <b>{total_quantity:.4f}</b>\n"
        f"üéØ –ù–æ–≤—ã–π TP: <b>{new_tp_price:.6f}</b> ({tp_percent:.1f}%)\n"
        f"üõ°Ô∏è –°—Ç–æ–ø-–ª–æ—Å—Å: <b>{stop_loss_price:.6f}</b> (+{sl_percent:.1f}%)\n"
    )
    await send_message_to_telegram(message, chat_ids, bot_token)


async def notify_take_profit_reached(
    chat_ids: list,
    bot_token: str,
    symbol: str,
    current_price: float,
    profit_percent: float,
    breakeven_price: float
):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞
    
    Args:
        chat_ids: –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        symbol: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        current_price: –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞
        profit_percent: –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª–∏
        breakeven_price: –¶–µ–Ω–∞ –±–µ–∑—É–±—ã—Ç–∫–∞
    """
    message = (
        f"üéØ <b>–¢–ï–ô–ö-–ü–†–û–§–ò–¢ –î–û–°–¢–ò–ì–ù–£–¢!</b>\n\n"
        f"üìä –°–∏–º–≤–æ–ª: <code>{symbol}</code>\n"
        f"üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: <b>{current_price:.6f}</b>\n"
        f"üìà –ü—Ä–∏–±—ã–ª—å: <b>+{profit_percent:.2f}%</b>\n"
        f"üîí –ë–µ–∑—É–±—ã—Ç–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: <b>{breakeven_price:.6f}</b>\n"
    )
    await send_message_to_telegram(message, chat_ids, bot_token)


async def notify_breakeven_moved(
    chat_ids: list,
    bot_token: str,
    symbol: str,
    new_breakeven_price: float,
    breakeven_percent: float,
    current_profit: float
):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –±–µ–∑—É–±—ã—Ç–∫–∞
    
    Args:
        chat_ids: –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        symbol: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        new_breakeven_price: –ù–æ–≤–∞—è —Ü–µ–Ω–∞ –±–µ–∑—É–±—ã—Ç–∫–∞
        breakeven_percent: –ü—Ä–æ—Ü–µ–Ω—Ç –±–µ–∑—É–±—ã—Ç–∫–∞
        current_profit: –¢–µ–∫—É—â–∞—è –ø—Ä–∏–±—ã–ª—å
    """
    message = (
        f"üìà <b>–ë–ï–ó–£–ë–´–¢–û–ö –ü–ï–†–ï–ú–ï–©–ï–ù</b>\n\n"
        f"üìä –°–∏–º–≤–æ–ª: <code>{symbol}</code>\n"
        f"üîí –ù–æ–≤—ã–π –±–µ–∑—É–±—ã—Ç–æ–∫: <b>{new_breakeven_price:.6f}</b> ({breakeven_percent:.1f}%)\n"
        f"üí∞ –¢–µ–∫—É—â–∞—è –ø—Ä–∏–±—ã–ª—å: <b>+{current_profit:.2f}%</b>\n"
    )
    await send_message_to_telegram(message, chat_ids, bot_token)


async def notify_position_closed(
    chat_ids: list,
    bot_token: str,
    symbol: str,
    close_reason: str,
    entry_price: float,
    close_price: float,
    quantity: float,
    profit_percent: Optional[float] = None,
    profit_usdt: Optional[float] = None,
    is_averaged: bool = False
):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–æ–∑–∏—Ü–∏–∏
    
    Args:
        chat_ids: –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        symbol: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        close_reason: –ü—Ä–∏—á–∏–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è (STOP_LOSS, BREAKEVEN, MANUAL)
        entry_price: –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞
        close_price: –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        quantity: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
        profit_percent: –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª–∏/—É–±—ã—Ç–∫–∞
        profit_usdt: –ü—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫ –≤ USDT
        is_averaged: –ë—ã–ª–æ –ª–∏ —É—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ
    """
    reason_emoji = {
        "STOP_LOSS": "üõ°Ô∏è",
        "BREAKEVEN": "üîí",
        "MANUAL": "‚úã",
        "TAKE_PROFIT": "üéØ"
    }
    
    emoji = reason_emoji.get(close_reason, "üö®")
    
    profit_text = ""
    if profit_percent is not None:
        sign = "+" if profit_percent >= 0 else ""
        color = "üü¢" if profit_percent >= 0 else "üî¥"
        profit_text = f"üìä PnL: {color} <b>{sign}{profit_percent:.2f}%</b>\n"
    
    if profit_usdt is not None:
        sign = "+" if profit_usdt >= 0 else ""
        profit_text += f"üíµ PnL USDT: <b>{sign}{profit_usdt:.2f} USDT</b>\n"
    
    averaging_text = "‚úÖ –î–∞" if is_averaged else "‚ùå –ù–µ—Ç"
    
    message = (
        f"{emoji} <b>–ü–û–ó–ò–¶–ò–Ø –ó–ê–ö–†–´–¢–ê</b> {emoji}\n\n"
        f"üìä –°–∏–º–≤–æ–ª: <code>{symbol}</code>\n"
        f"üìù –ü—Ä–∏—á–∏–Ω–∞: <b>{close_reason}</b>\n"
        f"üíµ –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞: <b>{entry_price:.6f}</b>\n"
        f"üí∞ –¶–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: <b>{close_price:.6f}</b>\n"
        f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <b>{quantity:.4f}</b>\n"
        f"üîÑ –£—Å—Ä–µ–¥–Ω–µ–Ω–∏–µ: <b>{averaging_text}</b>\n"
        f"{profit_text}"
    )
    await send_message_to_telegram(message, chat_ids, bot_token)


async def notify_stop_loss_triggered(
    chat_ids: list,
    bot_token: str,
    symbol: str,
    current_price: float,
    stop_loss_price: float
):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
    
    Args:
        chat_ids: –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        symbol: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        current_price: –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞
        stop_loss_price: –¶–µ–Ω–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
    """
    message = (
        f"üõ°Ô∏è <b>–°–¢–û–ü-–õ–û–°–° –°–†–ê–ë–û–¢–ê–õ</b>\n\n"
        f"üìä –°–∏–º–≤–æ–ª: <code>{symbol}</code>\n"
        f"üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: <b>{current_price:.6f}</b>\n"
        f"üõë –°—Ç–æ–ø-–ª–æ—Å—Å: <b>{stop_loss_price:.6f}</b>\n"
        f"‚ö†Ô∏è –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é...\n"
    )
    await send_message_to_telegram(message, chat_ids, bot_token)


async def notify_strategy_error(
    chat_ids: list,
    bot_token: str,
    symbol: str,
    error_message: str,
    strategy_name: str = ""
):
    """
    –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    
    Args:
        chat_ids: –°–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
        bot_token: –¢–æ–∫–µ–Ω –±–æ—Ç–∞
        symbol: –¢–æ—Ä–≥–æ–≤—ã–π —Å–∏–º–≤–æ–ª
        error_message: –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
        strategy_name: –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    """
    strategy_text = f" ({strategy_name})" if strategy_name else ""
    message = (
        f"‚ùå <b>–û–®–ò–ë–ö–ê –í –°–¢–†–ê–¢–ï–ì–ò–ò</b>\n\n"
        f"üìä –°–∏–º–≤–æ–ª: <code>{symbol}</code>{strategy_text}\n"
        f"‚ö†Ô∏è –û—à–∏–±–∫–∞: <code>{error_message}</code>\n"
    )
    await send_message_to_telegram(message, chat_ids, bot_token)